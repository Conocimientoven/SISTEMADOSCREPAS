/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mainPackage;
import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import static mainPackage.AdministrarProveedores.establecido;
import static mainPackage.AdministrarUsuarios.validadorNombresAgregar;
import static mainPackage.IngresarAlSistema.conexion;

/**
 *
 * @author Ramón
 */
public class AdministrarProductos extends javax.swing.JFrame {

    static PreparedStatement pre;
    static ResultSet res, spaceUsed;
    static int tableSize=0,tableSizeComparator=0;
    static String testUsers[] = new String[4];
    Operaciones operacion = new Operaciones();
    
    public static Connection realizarConexion()
    {
	try{
		Connection co;
		co=DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=SDCDB;","sa","sa");
		establecido=true;
                return co;
                
	}catch(SQLException ex){
		 JOptionPane.showMessageDialog(null,ex.getMessage());
		establecido=false;
                 return null;
	}
    }
    
    
   
    
        
    
    
    /**
     * Creates new form agregarModificarProducto
     */
    public AdministrarProductos() {
        initComponents();
        
         idComboBox.getEditor().getEditorComponent().addKeyListener(new KeyAdapter() {
             
         public void keyReleased(KeyEvent evt) {
                
                
                String cadenaEscrita = idComboBox.getEditor().getItem().toString();

                if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                   if(comparar(cadenaEscrita)){// compara si el texto escrito se ecuentra en la lista
                       // busca el texto escrito en la base de datos
                       //buscarProductos(cadenaEscrita);
                       buscarProductos(cadenaEscrita);
                   }else{// en caso contrario toma como default el elemento 0 o sea el primero de la lista y lo busca.
                    buscarProductos(idComboBox.getItemAt(0).toString());
                    idComboBox.setSelectedIndex(0);
                    }
                }


                if (evt.getKeyCode() >= 65 && evt.getKeyCode() <= 90 || evt.getKeyCode() >= 96 && evt.getKeyCode() <= 105 || evt.getKeyCode() == 8) {
                    idComboBox.setModel(operacion.getListaProductos(cadenaEscrita));
                    if (idComboBox.getItemCount() > 0) {
                        idComboBox.getEditor().setItem(cadenaEscrita);
                        idComboBox.showPopup();                     

                    } else {
                        idComboBox.addItem(cadenaEscrita);
                    }
                }
            
            }
        });
         
         
        
        ImageIcon crepasLogotype = new ImageIcon("images/cre.jpg");
        ImageIcon logoProductoss =  new ImageIcon("images/producto.jpg");
        Icon icono2 = new ImageIcon(logoProductoss.getImage().getScaledInstance(logoProductos.getWidth(), logoProductos.getHeight(), Image.SCALE_DEFAULT));
        Icon icono = new ImageIcon(crepasLogotype.getImage().getScaledInstance(logoCrepas.getWidth(), logoCrepas.getHeight(), Image.SCALE_DEFAULT));
        logoCrepas.setIcon(icono);
        logoProductos.setIcon(icono2);
        this.repaint();


        
        
        this.setLocationRelativeTo(null);
        
        
        TextPrompt amount = new TextPrompt("Cantidad...", amountTextField);
        amount.changeAlpha(0.5f);
        amount.changeStyle(Font.BOLD + Font.ITALIC);
        
        modifyRadioButton.setEnabled(false);
        eraseRadioButton.setEnabled(false);
        
        idComboBox.setEnabled(false);
        descriptionTextArea.setEnabled(false);
        amountTextField.setEnabled(false);
        sizeComboBox.setEnabled(false);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        sizeComboBox = new javax.swing.JComboBox<>();
        amountLabel = new javax.swing.JLabel();
        descriptionLabel = new javax.swing.JLabel();
        idLabel = new javax.swing.JLabel();
        cancelButton = new javax.swing.JButton();
        amountTextField = new javax.swing.JTextField();
        addRadioButton = new javax.swing.JRadioButton();
        modifyRadioButton = new javax.swing.JRadioButton();
        eraseRadioButton = new javax.swing.JRadioButton();
        consultRadioButton = new javax.swing.JRadioButton();
        logoLabel = new javax.swing.JLabel();
        logoCrepas = new javax.swing.JLabel();
        acceptButton = new javax.swing.JButton();
        idComboBox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionTextArea = new javax.swing.JTextArea();
        logoProductos = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        sizeComboBox.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        sizeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---", "Kilos", "Litros", "Botes" }));
        sizeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sizeComboBoxActionPerformed(evt);
            }
        });

        amountLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        amountLabel.setText("Cantidad:");

        descriptionLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        descriptionLabel.setText("Descripción:");

        idLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        idLabel.setText("ID:");

        cancelButton.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        cancelButton.setText("Cancelar");
        cancelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelButtonMouseClicked(evt);
            }
        });

        amountTextField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        amountTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                amountTextFieldKeyTyped(evt);
            }
        });

        buttonGroup1.add(addRadioButton);
        addRadioButton.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        addRadioButton.setText("Agregar");
        addRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRadioButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(modifyRadioButton);
        modifyRadioButton.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        modifyRadioButton.setText("Modificar");
        modifyRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyRadioButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(eraseRadioButton);
        eraseRadioButton.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        eraseRadioButton.setText("Eliminar");
        eraseRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eraseRadioButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(consultRadioButton);
        consultRadioButton.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        consultRadioButton.setText("Consultar");
        consultRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultRadioButtonActionPerformed(evt);
            }
        });

        logoLabel.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        logoLabel.setText("ADMINISTRACIÓN DE PRODUCTOS");

        logoCrepas.setIcon(new javax.swing.ImageIcon("C:\\Users\\Success\\Documents\\GitHub\\SISTEMADOSCREPAS\\SISTEMADOSCREPAS\\images\\DosCreepauxCutted.png")); // NOI18N

        acceptButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        acceptButton.setText("Aceptar");
        acceptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptButtonActionPerformed(evt);
            }
        });
        acceptButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                acceptButtonKeyTyped(evt);
            }
        });

        idComboBox.setEditable(true);

        descriptionTextArea.setColumns(20);
        descriptionTextArea.setRows(5);
        descriptionTextArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                descriptionTextAreaKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(descriptionTextArea);

        logoProductos.setMaximumSize(new java.awt.Dimension(400, 400));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(logoLabel)
                        .addGap(98, 98, 98))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(modifyRadioButton)
                        .addGap(38, 38, 38)
                        .addComponent(eraseRadioButton)
                        .addGap(38, 38, 38)
                        .addComponent(consultRadioButton)
                        .addGap(38, 38, 38))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(idLabel)
                                    .addComponent(addRadioButton)
                                    .addComponent(amountLabel))
                                .addGap(16, 16, 16))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(descriptionLabel)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(amountTextField)
                                        .addGap(18, 18, 18)
                                        .addComponent(sizeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(idComboBox, 0, 292, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(logoCrepas, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(logoProductos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(acceptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(logoLabel)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(consultRadioButton)
                    .addComponent(eraseRadioButton)
                    .addComponent(modifyRadioButton)
                    .addComponent(addRadioButton))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idLabel)
                    .addComponent(idComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(logoProductos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(descriptionLabel)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(amountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(amountLabel))
                    .addComponent(sizeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logoCrepas, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acceptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sizeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sizeComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sizeComboBoxActionPerformed

    private void addRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRadioButtonActionPerformed

        idComboBox.setEditable(true);
        idComboBox.setBackground(Color.WHITE);

        idLabel.setEnabled(true);
        idComboBox.setEnabled(true);
        amountLabel.setEnabled(true);
        descriptionTextArea.setEnabled(true);
        amountLabel.setEnabled(true);
        amountTextField.setEnabled(false);        
        sizeComboBox.setEnabled(false);

        modifyRadioButton.setEnabled(false);
        eraseRadioButton.setEnabled(false);

        idComboBox.getEditor().setItem("");
        descriptionTextArea.setText("");
        amountTextField.setText("");

    }//GEN-LAST:event_addRadioButtonActionPerformed

    private void modifyRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyRadioButtonActionPerformed
        idComboBox.setBackground(Color.WHITE);
        idLabel.setEnabled(false);
        idComboBox.setEnabled(false);
        amountLabel.setEnabled(true);
        descriptionTextArea.setEnabled(true);
        amountLabel.setEnabled(true);
        amountTextField.setEnabled(true);       
        sizeComboBox.setEnabled(true);
        modifyRadioButton.setEnabled(false);
        eraseRadioButton.setEnabled(false);
    }//GEN-LAST:event_modifyRadioButtonActionPerformed

    private void eraseRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eraseRadioButtonActionPerformed
        amountLabel.setEnabled(true);
        idLabel.setEnabled(true);
        idComboBox.setEnabled(true);
        idComboBox.setEditable(false);
        amountLabel.setEnabled(false);
        descriptionTextArea.setEnabled(false);
        amountTextField.setEnabled(false);
        sizeComboBox.setEnabled(false);
    }//GEN-LAST:event_eraseRadioButtonActionPerformed

    private void consultRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultRadioButtonActionPerformed
        idComboBox.setEditable(true);
        idLabel.setEnabled(true);
        idComboBox.setEnabled(true);
        amountLabel.setEnabled(false);
        descriptionTextArea.setEnabled(false);
        amountLabel.setEnabled(true);
        amountTextField.setEnabled(false);
        sizeComboBox.setEnabled(false);
        idComboBox.setEnabled(true);
       
    }//GEN-LAST:event_consultRadioButtonActionPerformed
private boolean comparar(String cadena){
     Object [] lista = idComboBox.getComponents();
     boolean encontrado=false;
        for (Object object : lista) {
            if(cadena.equals(object)){
                encontrado = true;
              break;
            }

        }
       return encontrado;
    }
public void buscarProductos(String nombre) {
        String datos[] = operacion.buscarProveedores(nombre);

        if (datos[0] != null) {
            idComboBox.getEditor().setItem(datos[0]);
            descriptionTextArea.setText(datos[1]);
            amountTextField.setText(datos[2]);
            sizeComboBox.getEditor().setItem(datos[3]);

        } else {

            JOptionPane.showMessageDialog(rootPane, "No se encontro ningun archivo", "Error", JOptionPane.WARNING_MESSAGE);
        }
    }
    private void amountTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_amountTextFieldKeyTyped
        // TODO add your handling code here:
        char letterValidation = evt.getKeyChar();
        int aguita = (int)evt.getKeyChar();
        if(Character.isLetter(letterValidation)){
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null,"No puedes introducir letras","¡Error!",JOptionPane.ERROR_MESSAGE);
        }
        else if(amountTextField.getText().length() == 3) {
            evt.consume();
            JOptionPane.showMessageDialog(null,"Longitud de caracteres máxima alcanzda","¡Error!",JOptionPane.ERROR_MESSAGE);

        }
        else if(aguita == 32 || aguita == 46){
            evt.consume();
            JOptionPane.showMessageDialog(null,"No puedes introducor espacios o puntos en este campo","¡Alerta!",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_amountTextFieldKeyTyped

    private void cancelButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelButtonMouseClicked
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null,"Regresando...","¡Alerta!",JOptionPane.INFORMATION_MESSAGE);
        InterfazAdministrador goBack = new InterfazAdministrador();
        goBack.setVisible(true);
        dispose();
    }//GEN-LAST:event_cancelButtonMouseClicked

    private void acceptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptButtonActionPerformed
        // TODO add your handling code here:
        try
        {
            conexion = Conexion.realizarConexion();

            if(addRadioButton.isSelected())
            {
                
                
                    pre = conexion.prepareStatement("{call newProducts3(?,?,?,?)}");

                    pre.setString(1,idComboBox.getEditor().getItem().toString());
                    pre.setString(2,descriptionTextArea.getText());
                    pre.setString(3,amountTextField.getText());
                    pre.setString(4,String.valueOf(sizeComboBox.getSelectedItem()));
                    pre.executeUpdate();
                    JOptionPane.showMessageDialog(null, "El producto  "+idComboBox.getEditor().getItem().toString()+"  ha sido agregado correctamente a la base de datos","¡Felicitaciones!",JOptionPane.INFORMATION_MESSAGE);
                    //AdministrarUsuarios.fieldCleaner();
                    idComboBox.getEditor().setItem("");
                    descriptionTextArea.setText("");
                    amountTextField.setText("");
                
                

            }
            else if(modifyRadioButton.isSelected())
            {
                pre = conexion.prepareStatement("{call modifyProducts3(?,?,?,?)}");

                pre.setString(1,idComboBox.getEditor().getItem().toString());
                pre.setString(2,descriptionTextArea.getText());
                pre.setString(3,amountTextField.getText());
                pre.setString(4,String.valueOf(sizeComboBox.getSelectedItem()));
                pre.executeUpdate();
                idComboBox.getEditor().setItem("");
                descriptionTextArea.setText("");
                amountTextField.setText("");
                sizeComboBox.getEditor().setItem("---");
                JOptionPane.showMessageDialog(null, "Los datos del producto "+idComboBox.getEditor().getItem().toString()+"  se han modificado correctamente","¡Felicidades!",JOptionPane.INFORMATION_MESSAGE);
            }

            else if(eraseRadioButton.isSelected())
            {
                pre=conexion.prepareStatement("{call deleteProduct3(?)}");
                pre.setString(1,idComboBox.getEditor().getItem().toString());
                pre.executeUpdate();

                modifyRadioButton.setEnabled(false);
                eraseRadioButton.setEnabled(false);
                consultRadioButton.setSelected(true);

                JOptionPane.showMessageDialog(null, "El producto "+idComboBox.getEditor().getItem().toString()+"  ha sido eliminado correctamente ","¡Felicidaddes!",JOptionPane.INFORMATION_MESSAGE);
                idComboBox.getEditor().setItem("");
                descriptionTextArea.setText("");
                amountTextField.setText("");
                sizeComboBox.getEditor().setItem("---");
                idComboBox.setEditable(true);

            }

            else if(consultRadioButton.isSelected())
            {

                res=Conexion.Consulta("execute consultProducts3");
                spaceUsed=Conexion.Consulta("execute getProductosCountrows3");

                try
                {
                    while (spaceUsed.next())
                    {
                        tableSize=spaceUsed.getInt(1);
                    }
                }
                catch(SQLException e)
                {}

                while(res.next())
                {

                    testUsers[0]=res.getString(1);  //Nombre corto del producto
                    testUsers[1]=res.getString(2);  //Nombre descriptivo del producto
                    testUsers[2]=res.getString(3);  //CANTIDAD DEL PRODUCTO
                    testUsers[3]=res.getString(4);  //UNIDAD DE MEDIDA DE LA CANTIDAD DEL PRODUCTO

                    if(((idComboBox.getEditor().getItem().toString()).equals(testUsers[0])))
                    {

                        modifyRadioButton.setEnabled(true);
                        eraseRadioButton.setEnabled(true);
                        sizeComboBox.getEditor().setItem("---");
                        JOptionPane.showMessageDialog(null, "El producto ha sido encontrado \n Usted ahora puede: \n Modificar los datos del producto \n Eliminar el producto","¡Aviso!",JOptionPane.INFORMATION_MESSAGE);
                        idComboBox.getEditor().setItem(testUsers[0]);
                        descriptionTextArea.setText(testUsers[1]);
                        amountTextField.setText(testUsers[2]);
                        sizeComboBox.getEditor().setItem(testUsers[3]);
                        /*if(testUsers[3].equals("Kilos"))
                        {
                            sizeComboBox.setSelectedIndex(1);
                        }
                        else
                        {
                            sizeComboBox.setSelectedIndex(0);
                        }*/
                        break;
                    }
                    else if(tableSizeComparator==tableSize-1)
                    {
                        JOptionPane.showMessageDialog(null, "El producto no se encuentra","¡Error!",JOptionPane.ERROR_MESSAGE);
                        break;
                    }
                    tableSizeComparator++;
                }
            }
        }
        catch (SQLException e)
        {JOptionPane.showMessageDialog(null,e.getMessage());}
    }//GEN-LAST:event_acceptButtonActionPerformed

    private void acceptButtonKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_acceptButtonKeyTyped
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_acceptButtonKeyTyped

    private void descriptionTextAreaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_descriptionTextAreaKeyTyped
        // TODO add your handling code here:
        int number = (int)evt.getKeyChar();
        char agua = evt.getKeyChar();
        if(descriptionTextArea.getText().length() == 35){
            evt.consume();
            JOptionPane.showMessageDialog(null,"Longitud de caracteres máxima alcanzada en el renglón","¡Alerta!",JOptionPane.INFORMATION_MESSAGE);
        }
        else if(Character.isDigit(agua)){
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null,"No puedes introducir números en este campo","¡Alerta!",JOptionPane.INFORMATION_MESSAGE);
        }
        
    }//GEN-LAST:event_descriptionTextAreaKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdministrarProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdministrarProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdministrarProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdministrarProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdministrarProductos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptButton;
    private static javax.swing.JRadioButton addRadioButton;
    private javax.swing.JLabel amountLabel;
    private javax.swing.JTextField amountTextField;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton cancelButton;
    private static javax.swing.JRadioButton consultRadioButton;
    private javax.swing.JLabel descriptionLabel;
    private javax.swing.JTextArea descriptionTextArea;
    private static javax.swing.JRadioButton eraseRadioButton;
    private javax.swing.JComboBox<String> idComboBox;
    private javax.swing.JLabel idLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel logoCrepas;
    private javax.swing.JLabel logoLabel;
    private javax.swing.JLabel logoProductos;
    private static javax.swing.JRadioButton modifyRadioButton;
    private javax.swing.JComboBox<String> sizeComboBox;
    // End of variables declaration//GEN-END:variables
}
